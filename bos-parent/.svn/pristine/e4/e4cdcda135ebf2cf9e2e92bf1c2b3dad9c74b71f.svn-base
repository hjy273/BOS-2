package cn.bos.action;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;

import org.apache.poi.hssf.usermodel.HSSFCell;
import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.openxml4j.exceptions.InvalidFormatException;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.ss.usermodel.WorkbookFactory;
import org.apache.struts2.convention.annotation.Action;
import org.apache.struts2.convention.annotation.Namespace;
import org.apache.struts2.convention.annotation.ParentPackage;
import org.apache.struts2.convention.annotation.Result;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Scope;
import org.springframework.stereotype.Controller;
import org.springframework.web.filter.ShallowEtagHeaderFilter;

import cn.bos.domain.base.Region;
import cn.bos.utils.PinYin4jUtils;

@Controller
@Namespace("/bc")
@ParentPackage("/bos")
@Scope("prototype")
public class RegionAction  extends BaseAction<Region>{
	//region_uploadRegion
	@Autowired
	private File upload;
	public void setUpload(File upload) {
		this.upload = upload;
	}

	@Action(value="region_uploadRegion",results={@Result(name="uploadRegion", type="json")})
	public  String uploadRegion(){
		HashMap<String, Object> results = new HashMap<>();
		//poi接卸文件，解析region
		try {
            // 创建对Excel工作簿文件的引用
			HSSFWorkbook workbook = new HSSFWorkbook(new FileInputStream(upload));
            // 创建对工作表的引用。
            // 本例是按名引用（让我们假定那张表有着缺省名"Sheet1"）
          //  HSSFSheet sheet = workbook.getSheet("Sheet1");
            HSSFSheet sheet = workbook.getSheetAt(0);
            ArrayList<Region> regions = new ArrayList<Region>();
            
            // 也可用getSheetAt(int index)按索引引用，
            // 在Excel文档中，第一张工作表的缺省索引是0，
            // 其语句为：HSSFSheet sheet = workbook.getSheetAt(0);
            // 读取左上端单元
            
            for(Row row :sheet){
            	if(row.getRowNum()==0){
            		continue;
            	}
            	//读取每一行数据
            	Region r = new Region();
            	r.setId(row.getCell(0).getStringCellValue());
            	r.setProvince(row.getCell(1).getStringCellValue());
            	String province = row.getCell(1).getStringCellValue();
            	r.setCity(row.getCell(2).getStringCellValue());
            	String city = row.getCell(2).getStringCellValue();
            	r.setDistrict(row.getCell(3).getStringCellValue());
            	String district = row.getCell(3).getStringCellValue();
            	r.setPostcode(row.getCell(4).getStringCellValue());
            	//pingyin4j实现省市简记码
            	
            	
            	
            	
            	//r.setShortcode(shortcode);
            //	String city = row.getCell(2).getStringCellValue();
            	
            	city.substring(0,city.length()-1);
            	r.setCitycode(PinYin4jUtils.hanziToPinyin(city, ""));
            	
            	province = province.substring(0, province.length() - 1);
				district = district.substring(0, district.length() - 1);
				String[] strings;
				if (province.equalsIgnoreCase(city)) {
					// 直辖市
					strings = PinYin4jUtils.getHeadByString(province + district);
				} else {
					// 非直辖市
					strings = PinYin4jUtils.getHeadByString(province + city + district);
				}
				// 省市区关键字首字母 拼接字符串 遍历
				String shortcode = getHeadFromArray(strings);
				r.setShortcode(shortcode); // 省市区 每一个中文字首字母大写组成
            	regions.add(r);
            }
            facadService.getRegionService().importData(regions);
            getValueStack().push(results);
            results.put("flag", true);
        } catch (Exception e) {
            System.out.println("已运行xlRead() : " + e);
            results.put("flag", false);
        }
		
		return "uploadRegion";
		
		
	}

	private String getHeadFromArray(String[] strings) {
		if (strings == null || strings.length == 0) {
			return null;
		} else {
			StringBuilder sb = new StringBuilder();
			for (String s : strings) {
				sb.append(s);
			}
			return sb.toString();
		}
	}
}
